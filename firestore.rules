rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isFriend(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)/friends/$(request.auth.uid));
    }
    
    function isPublic(privacy) {
      return privacy == 'public';
    }
    
    function canReadBasedOnPrivacy(privacy, userId) {
      return isPublic(privacy) || isOwner(userId) || (privacy == 'friends' && isFriend(userId));
    }

    // Development mode helper - allows unrestricted access for development and seeding
    function isDevMode() {
      return request.time < timestamp.date(2030, 1, 1); // Enable until 2030 for dev
    }

    // Users collection - Allow read for demo purposes
    match /users/{userId} {
      allow read: if true; // Allow all reads for demo
      allow write: if isDevMode() || (isAuthenticated() && isOwner(userId));
      
      // User subcollections - Allow read for demo purposes
      match /friends/{friendId} {
        allow read: if true; // Allow all reads for demo
        allow write: if isDevMode() || (isAuthenticated() && isOwner(userId));
      }
      
      match /following/{followingId} {
        allow read: if true; // Allow all reads for demo
        allow write: if isDevMode() || (isAuthenticated() && isOwner(userId));
      }
      
      match /activity/{activityId} {
        allow read: if true; // Allow all reads for demo
        allow write: if isDevMode() || (isAuthenticated() && isOwner(userId));
      }
    }

    // Places collection - Allow read for demo purposes
    match /places/{placeId} {
      allow read: if true; // Allow all reads for demo
      allow write: if isDevMode() || isAuthenticated();
      allow delete: if isDevMode(); // Allow deletion in dev mode for cleanup
    }

    // Lists collection - Allow read for demo purposes
    match /lists/{listId} {
      allow read: if true; // Allow all reads for demo
      allow write: if isDevMode() || (isAuthenticated() && isOwner(resource.data.userId));
      allow delete: if isDevMode() || (isAuthenticated() && isOwner(resource.data.userId));
    }

    // Posts collection - Allow read for demo purposes
    match /posts/{postId} {
      allow read: if true; // Allow all reads for demo
      allow write: if isDevMode() || (isAuthenticated() && isOwner(resource.data.userId));
      allow delete: if isDevMode() || (isAuthenticated() && isOwner(resource.data.userId));
    }

    // User preferences collection - Allow read/write for demo purposes
    match /userPreferences/{userId} {
      allow read: if true; // Allow all reads for demo
      allow write: if true; // Allow all writes for demo
    }

    // Analytics collection - Allow writes for demo purposes
    match /analytics/{document=**} {
      allow create: if true; // Allow all writes for demo
      allow read: if false; // Only backend should read analytics
    }

    // Test collection - Allow all operations for development
    match /test-collection/{document=**} {
      allow read, write: if isDevMode(); // Only allow in dev mode
    }

    // Development/Seed data - Allow all operations
    match /seed-data/{document=**} {
      allow read, write: if isDevMode(); // Only allow in dev mode
    }

    // Default deny all other paths
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 